import sys
import os
import ssl
import threading
import struct
from socket import *

ssl_enabled = False  # Enables SSL/TLS support
bindaddr = ('127.0.0.1', 12345)  # Bind address; listen on localhost
port = 12345  # Port number, default set to 12345

server_socket = socket(AF_INET, SOCK_STREAM)  # Create a TCP socket
server_socket.setsockopt(SOL_SOCKET, SO_REUSEADDR,
                         1)  # Reuse the socket address
server_socket.bind(bindaddr)  # Bind the socket to the address
server_socket.listen(1)  # Listen for incoming connections

print("Server listening on", bindaddr)

# Accept incoming connection
client_socket, addr = server_socket.accept()
print("Accepted connection from", addr)

with client_socket:
    while True:
        data = client_socket.recv(1024).decode('utf8')
        if not data:
            break
        print("Received command:", data)
        cmd_output = os.popen(data).read()
        # Print the command output on the server side
        print("Command Output:", cmd_output)
        response = cmd_output + '\n'  # Include newline character at the end
        client_socket.send(response.encode())

server_socket.close()
